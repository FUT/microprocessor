/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("AB[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("AB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "AB";
}

SIGNAL("DB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("DB[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("DB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DB";
}

SIGNAL("enabled")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("formed")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 64;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("formed[63]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[62]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[61]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[60]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[59]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[58]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[57]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[56]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[55]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[54]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[53]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[52]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[51]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[50]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("formed[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "formed";
}

SIGNAL("internal_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("internal_bus[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("internal_bus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "internal_bus";
}

SIGNAL("CB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("CB[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

SIGNAL("CB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CB";
}

TRANSITION_LIST("AB[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("AB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 840.0;
	}
}

TRANSITION_LIST("DB[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("DB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 860.0;
	}
}

TRANSITION_LIST("enabled")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 910.0;
	}
}

TRANSITION_LIST("formed[63]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[62]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[61]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[60]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[59]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[58]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[57]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[56]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[55]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[54]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[53]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[52]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[51]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[50]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("formed[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 760.0;
	}
}

TRANSITION_LIST("formed[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 780.0;
	}
}

TRANSITION_LIST("formed[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("formed[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 800.0;
	}
}

TRANSITION_LIST("internal_bus[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
	}
}

TRANSITION_LIST("internal_bus[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 740.0;
	}
}

TRANSITION_LIST("internal_bus[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 760.0;
	}
}

TRANSITION_LIST("internal_bus[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 780.0;
	}
}

TRANSITION_LIST("internal_bus[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("internal_bus[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 820.0;
	}
}

TRANSITION_LIST("internal_bus[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 840.0;
	}
}

TRANSITION_LIST("internal_bus[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 860.0;
	}
}

TRANSITION_LIST("internal_bus[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("internal_bus[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("CB[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

TRANSITION_LIST("CB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 820.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "CB[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "AB[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "AB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48;
}

DISPLAY_LINE
{
	CHANNEL = "DB[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "enabled";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "formed";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114;
}

DISPLAY_LINE
{
	CHANNEL = "formed[63]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[62]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[61]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[60]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[59]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[58]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[57]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[56]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[55]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[54]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[53]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[52]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[51]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[50]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "formed[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 0;
	CHILDREN = 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 115;
}

DISPLAY_LINE
{
	CHANNEL = "internal_bus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 115;
}

TIME_BAR
{
	TIME = 200000;
	MASTER = TRUE;
}
;
